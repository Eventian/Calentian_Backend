services:
  # ───────────────────────────────────────────────────────────────────────────
  # 1) PostHog Web App
  # ───────────────────────────────────────────────────────────────────────────
  posthog:
    image: posthog/posthog:latest
    container_name: posthog
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@posthog-db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://posthog-redis:6379/0
      - CLICKHOUSE_URL=http://posthog-clickhouse:8123/
      - PLUGIN_SERVER_URL=http://posthog-plugin-server:6738
      - DJANGO_SECRET_KEY=${POSTHOG_SECRET_KEY}
      - SITE_URL=https://${DOMAIN}
    depends_on:
      posthog-db:
        condition: service_healthy
      posthog-redis:
        condition: service_started
      posthog-clickhouse:
        condition: service_healthy
      posthog-plugin-server:
        condition: service_started
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.posthog.rule=Host(`posthog.${DOMAIN}`)"
      - "traefik.http.routers.posthog.entrypoints=websecure"
      - "traefik.http.routers.posthog.tls.certresolver=letsencrypt"
      - "traefik.http.routers.posthog.middlewares=secure-headers@file"
      - "traefik.http.services.posthog.loadbalancer.server.port=8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ───────────────────────────────────────────────────────────────────────────
  # 2) PostgreSQL
  # ───────────────────────────────────────────────────────────────────────────
  posthog-db:
    image: postgres:13-alpine
    container_name: posthog-db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - posthog-db-data:/var/lib/postgresql/data
    networks:
      - proxy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ───────────────────────────────────────────────────────────────────────────
  # 3) Redis
  # ───────────────────────────────────────────────────────────────────────────
  posthog-redis:
    image: redis:6-alpine
    container_name: posthog-redis
    restart: unless-stopped
    volumes:
      - posthog-redis-data:/data
    networks:
      - proxy
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ───────────────────────────────────────────────────────────────────────────
  # 4) ClickHouse (Events Storage)
  # ───────────────────────────────────────────────────────────────────────────
  posthog-clickhouse:
    image: clickhouse/clickhouse-server:23.5
    container_name: posthog-clickhouse
    restart: unless-stopped
    volumes:
      - posthog-clickhouse-data:/var/lib/clickhouse
      - ./clickhouse_config/config.d:/etc/clickhouse-server/config.d:ro
    networks:
      - proxy

    healthcheck:
      test: ["CMD-SHELL", "clickhouse-client --query \"SELECT 1\""]
      interval: 30s
      timeout: 10s
      retries: 5

  # ───────────────────────────────────────────────────────────────────────────
  # 5) Plugin Server
  # ───────────────────────────────────────────────────────────────────────────
  posthog-plugin-server:
    image: posthog/posthog:latest
    container_name: posthog-plugin-server
    restart: unless-stopped
    env_file:
      - .env
    command: ["bash", "-c", "bin/plugin-server"]
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@posthog-db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://posthog-redis:6379/0
    networks:
      - proxy
    labels:
      - "traefik.enable=false"

volumes:
  posthog-db-data:
  posthog-redis-data:
  posthog-clickhouse-data:

networks:
  proxy:
    external: true
